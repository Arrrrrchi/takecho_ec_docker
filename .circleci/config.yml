version: 2.1
jobs:
  build:
    docker:
      - image: cimg/php:8.1.21-node
        environment:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_DATABASE: testing
          DB_USERNAME: 'root'
          DB_PASSWORD: ''
      - image: cimg/mysql:8.0
        environment:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_HOST: '%'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          TZ: Asia/Tokyo
    
    steps:
      - checkout
      - run:
          name: pwd && ls -a
          command: pwd && ls -a

      # PHP関連パッケージのインストール
      - restore_cache:
          key: composer-v1-{{ checksum "src/composer.lock" }}
      - run: cd src && composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "src/composer.lock" }}
          paths:
            - vendor
            
      # JavaScript関連パッケージのインストール
      - restore_cache:
          key: npm-v1-{{ checksum "src/package-lock.json" }}
      - run: 
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              cd src && npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "src/package-lock.json" }}
          paths:
            - node_modules

      # マイグレーション
      - run: cd src && php artisan migrate

      # アセットのビルド
      - run:
          name: npm run build
          command: cd src && npm run build

      # テストの実行
      - run: 
          name: PHP test
          command: cd src && php artisan test
          requires: docker

  deploy:
    docker:
      - image: cimg/php:8.1.21-node
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1

    steps:
      - checkout
      - restore_cache:
          key: composer-no-dev-v1-{{ checksum "src/composer.lock" }}
      - run: cd src && composer install -n --no-dev --prefer-dist
      - save_cache:
          key: composer-no-dev-v1-{{ checksum "src/composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          key: npm-v1-{{ checksum "src/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              cd src && npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "src/package-lock.json" }}
          paths:
            - node_modules
      - run: cd src && npm run build
      - run:
          name: archive artifacts
          command: zip -ryq takecho-ec.zip .
      - aws-cli/install
      - run:
          name: upload artifacts to s3
          command: aws s3 cp takecho-ec.zip s3://${AWS_S3_BUCKET_NAME}
      - run:
          name: deploy to prod
          command: |
            aws deploy create-deployment \
            --application-name takecho-ec \
            --deployment-group-name takecho-ec \
            --s3-location bucket=${AWS_S3_BUCKET_NAME},key=takecho-ec.zip,bundleType=zip

orbs:
  aws-cli: circleci/aws-cli@1.0.0

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
